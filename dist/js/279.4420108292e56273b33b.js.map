{"version":3,"file":"js/279.4420108292e56273b33b.js","mappings":"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","sources":["webpack://ecommerce-react/./src/views/admin/component_ingredient/components/IngredientListTab.jsx"],"sourcesContent":["\nimport { EditOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Boundary, ImageLoader } from 'components/common';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport {\n  useDocumentTitle, useFileHandler, useModal, useScrollTop\n} from 'hooks';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLoading } from 'redux/actions/miscActions';\nimport { addIngredients, updateIngredient } from 'redux/actions/ingredientActions';\nimport * as Yup from 'yup';\nimport ConfirmModal from '../edit-ingredient/ConfirmModal';\nimport EditForm from '../edit-ingredient/EditForm';\n\nimport { call, put, select } from 'redux-saga/effects';\n\nimport { IngredientsNavbar } from '../../component_ingredient';\n// Just add this feature if you want :P\n\nconst UserWishListTab = (parameters) => {\n\n  useDocumentTitle('Edit Account | Dign1 - Ingredients ');\n  useScrollTop();\n\n  // const modal = useModal();\n  const dispatch = useDispatch();\n\n  useEffect(() => () => {\n    dispatch(setLoading(false));\n  }, []);\n\n  const { ingredients, profile, auth, isLoading } = useSelector((state) => ({\n    profile: state.profile,\n    ingredients: state.ingredients,\n    auth: state.auth,\n    isLoading: state.app.loading\n  }));\n\n  const initFormikValues = {\n    fullname: ingredients.email || '',\n    email: ingredients.email || '',\n    address: ingredients.address || '',\n    mobile: ingredients.mobile || {},\n    avatar: ingredients.avatar || {},\n    banner: ingredients.banner || {},\n\n    // parameters1: ingredients?.parameters1 || [],\n\n    parameters1: ingredients?.parameters1?.map((person) => ({ name: person.name, preis1: person.preis1 })) || []\n\n\n    // parameters1: [\n\n    //   {\n    //     name: \"KÃ¤se\", \n    //     preis1: \"0,80\",\n    //     preis2: \"1,10\",\n    //     preis3: \"1,80\",\n    //     preis4: \"3,00\"\n    //   },\n\n    //   {\n    //     name: \"Salami\",\n    //     preis1: \"0,80\",\n    //     preis2: \"1,10\",\n    //     preis3: \"1,80\",\n    //     preis4: \"3,00\"\n    //   },\n\n    //   {\n    //     name: \"Peperoniwurst\",\n    //     preis1: \"0,80\",\n    //     preis2: \"1,10\",\n    //     preis3: \"1,80\",\n    //     preis4: \"3,00\"\n    //   },\n\n    //   {\n    //     name: \"Schinken\",\n    //     preis1: \"0,80\",\n    //     preis2: \"1,10\",\n    //     preis3: \"1,80\",\n    //     preis4: \"3,00\"\n    //   }\n    // ],\n    // avatar: {},\n    // banner: {}\n  };\n\n  console.log(initFormikValues)\n\n  const {\n    imageFile,\n    isFileLoading,\n    onFileChange\n  } = useFileHandler({ avatar: {}, banner: {} });\n\n\n\n  const update = (form) => {\n    dispatch(updateIngredient({\n      updates: {\n        fullname: form.email,\n        email: form.email,\n        address: form.address,\n        mobile: form.mobile,\n        // it stazys empty when updating it\n        avatar: form.avatar,\n        banner: form.banner,\n\n        parameters1: form.parameters1 || [],\n\n        // parameters1: form?.parameters1?.map((person) => ({ name: person.name, preis1: person.preis1 })) || []\n\n      },\n      files: {\n        bannerFile: imageFile.banner.file,\n        avatarFile: imageFile.avatar.file\n      },\n      // credentials\n    }));\n  };\n\n  // const add = (form) => {\n  //   dispatch(addSettings({\n  //     adds: {\n  //       fullname: form.fullname,\n  //       email: form.email,\n  //       address: form.address,\n  //       mobile: form.mobile,\n\n  //     },\n  //     files: {\n  //       bannerFile: imageFile.banner.file,\n  //       avatarFile: imageFile.avatar.file\n  //     },\n\n  //   }));\n  // };\n\n\n\n\n  // const onConfirmUpdate = (form, password) => {\n  //   if (password) {\n  //     update(form, { email: form.email, password });\n  //   }\n  // };\n\n  const onSubmitUpdate = (form) => {\n    // check if data has changed\n    const fieldsChanged = Object.keys(form).some((key) => ingredients[key] !== form[key]);\n\n\n    if (fieldsChanged || (Boolean(imageFile.banner.file || imageFile.avatar.file))) {\n      update(form);\n      // modal.onOpenModal();\n    } else {\n      console.log(\"failed to add: \");\n    }\n\n  };\n\n  // const onSubmitAdd = (form) => {\n  //   // check if data has changed\n  //   const fieldsChanged = Object.keys(form).some((key) => ingredients[key] !== form[key]);\n\n  //   if (fieldsChanged) {\n  //     if (fieldsChanged || (Boolean(imageFile.banner.file || imageFile.avatar.file))) {\n  //       add(form);\n  //       // modal.onOpenModal();\n  //     } else {\n  //       console.log(\"failed to add: \");\n  //     }\n  //   }\n  // };\n\n\n\n\nreturn (\n\n\n\n\n  <Boundary>\n\n\n\n\n      <IngredientsNavbar\n      // settingsCount={store.ingredients.items.length}\n      // totalSettingsCount={store.ingredients.total}\n      />\n\n      <div className=\"product-admin-items\">\n        <div className=\"edit-user\">\n          <h3 className=\"text-center\">Edit Ingredient Details1</h3>\n          <Formik\n            initialValues={initFormikValues}\n            validateOnChange\n            // validationSchema={FormSchema}\n\n\n\n            onSubmit={onSubmitUpdate}\n          // onSubmit={onSubmitAdd}\n\n          // onSubmit={(onSubmitUpdate, {resetForm}) => {\n          //   console.log(onSubmitUpdate);\n          //   resetForm({ initFormikValues });\n          // } }\n\n\n\n\n\n          >\n\n\n\n            {(values, setValues) => (\n              <>\n\n\n\n\n\n                <div className=\"user-profile-banner\">\n                  <div className=\"user-profile-banner-wrapper\">\n                    <ImageLoader\n                      alt=\"Banner\"\n                      className=\"user-profile-banner-img\"\n                      src={imageFile.banner.url || ingredients.banner}\n                    />\n                    {isFileLoading ? (\n                      <div className=\"loading-wrapper\">\n                        <LoadingOutlined />\n                      </div>\n                    ) : (\n                      <label\n                        className=\"edit-button edit-banner-button\"\n                        htmlFor=\"edit-banner\"\n                      >\n                        <input\n                          accept=\"image/x-png,image/jpeg\"\n                          disabled={isLoading}\n                          hidden\n                          id=\"edit-banner\"\n                          onChange={(e) => onFileChange(e, { name: 'banner', type: 'single' })}\n                          type=\"file\"\n                        />\n                        <EditOutlined />\n                      </label>\n                    )}\n                  </div>\n                  <div className=\"user-profile-avatar-wrapper\">\n                    <ImageLoader\n                      alt=\"Avatar\"\n                      className=\"user-profile-img\"\n                      src={imageFile.avatar.url || ingredients.avatar}\n                    />\n                    {isFileLoading ? (\n                      <div className=\"loading-wrapper\">\n                        <LoadingOutlined />\n                      </div>\n                    ) : (\n                      <label\n                        className=\"edit-button edit-avatar-button\"\n                        htmlFor=\"edit-avatar\"\n                      >\n                        <input\n                          accept=\"image/x-png,image/jpeg\"\n                          disabled={isLoading}\n                          hidden\n                          id=\"edit-avatar\"\n                          onChange={(e) => onFileChange(e, { name: 'avatar', type: 'single' })}\n                          type=\"file\"\n                        />\n                        <EditOutlined />\n                      </label>\n                    )}\n                  </div>\n                </div>\n\n\n\n\n                <EditForm />\n\n\n\n                {/* <div className='fieldarray-top' >\n                  <h4>Add Sizes</h4>\n                  <FieldArray\n\n                    name=\"parameters1\"\n                    // disabled={isLoading}\n                    className=\"fieldarray\"\n\n                    render={arrayHelpers => (\n\n                      <div>\n                        {values.parameters1?.length > 0 &&\n                          values.parameters1.map((paramList, index) => (\n\n                            <div key={index}>\n                              {Object.keys(paramList).map(param => (\n\n                                <Field\n                                  key={`${param}`}\n                                  name={`parameters1.${index}.${param}`}\n                                  placeholder={`${index}.${param}`}\n                                  className=\"field-ingredients\"\n\n                                />\n                              ))}\n                              <button\n                                type=\"button\"\n                                onClick={() => arrayHelpers.remove(index)}\n                              >\n                                {\" \"}\n                                -{\" \"}\n                              </button>\n                            </div>\n\n                          ))}\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            arrayHelpers.push({ name: \"\", preis1: \"\", preis2: \"\", preis3: \"\", preis4: \"\" })\n                          }\n                        >\n                          {\" \"}\n                          +{\" \"}\n                        </button>\n                      </div>\n                    )}\n                  />\n\n                </div>\n\n                <pre>{JSON.stringify(values, null, 2)}</pre> */}\n\n\n\n\n\n\n              </>\n\n\n\n\n            )}\n\n\n\n\n\n\n          </Formik>\n\n\n\n\n        </div>\n      </div>\n    </Boundary>\n\n\n);\n};\n\n\n\nexport default UserWishListTab;\n"],"names":["EditOutlined","LoadingOutlined","Boundary","ImageLoader","Formik","Field","Form","FieldArray","useDocumentTitle","useFileHandler","useModal","useScrollTop","React","useEffect","useDispatch","useSelector","setLoading","addIngredients","updateIngredient","Yup","ConfirmModal","EditForm","call","put","select","IngredientsNavbar","UserWishListTab","parameters","dispatch","state","profile","ingredients","auth","isLoading","app","loading","initFormikValues","fullname","email","address","mobile","avatar","banner","parameters1","map","person","name","preis1","console","log","imageFile","isFileLoading","onFileChange","update","form","updates","files","bannerFile","file","avatarFile","onSubmitUpdate","fieldsChanged","Object","keys","some","key","Boolean","values","setValues","url","e","type"],"sourceRoot":""}