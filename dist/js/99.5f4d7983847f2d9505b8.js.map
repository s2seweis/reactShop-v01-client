{"version":3,"file":"js/99.5f4d7983847f2d9505b8.js","mappings":"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","sources":["webpack://ecommerce-react/./src/views/account/components/UserAccountTab.jsx"],"sourcesContent":["/* eslint-disable indent */\nimport { ImageLoader } from 'components/common';\nimport { ACCOUNT_EDIT } from 'constants/routes';\nimport { displayDate } from 'helpers/utils';\nimport PropType from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst UserProfile = (props) => {\n  // profile = users, in firebase\n  const profile = useSelector((state) => state.profile);\n\n  return (\n    <div className=\"user-profile\">\n      <div className=\"user-profile-block\">\n        <div className=\"user-profile-banner\">\n          <div className=\"user-profile-banner-wrapper\">\n            <ImageLoader\n              alt=\"Banner\"\n              className=\"user-profile-banner-img\"\n              src={profile.banner}\n            />\n          </div>\n          <div className=\"user-profile-avatar-wrapper\">\n            <ImageLoader\n              alt=\"Avatar\"\n              className=\"user-profile-img\"\n              src={profile.avatar}\n            />\n          </div>\n          <button\n            className=\"button button-small user-profile-edit\"\n            onClick={() => props.history.push(ACCOUNT_EDIT)}\n            type=\"button\"\n          >\n            Edit Account1\n          </button>\n        </div>\n        <div className=\"user-profile-details\">\n          <h2 className=\"user-profile-name\">{profile.fullname}</h2>\n          <span>Email</span>\n          <br />\n          <h5>{profile.email}</h5>\n\n          <span>Address</span>\n          <br />\n          {profile.address ? (\n            <h5>{profile.address}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Address not set</h5>\n          )}\n\n          <span>Address</span>\n          <br />\n          {profile.role ? (\n            <h5>{profile.role}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Address not set</h5>\n          )}\n\n          {/* map object */}\n\n          <span>Mobile</span>\n          <br />\n          {profile.mobile ? (\n            <h5>{profile.mobile.value}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n          <span>Country</span>\n          <br />\n          {profile.mobile ? (\n            <h5>{profile.mobile.country}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n          <span>Country Code</span>\n          <br />\n          {profile.mobile ? (\n            <h5>{profile.mobile.countryCode}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n          <span>Date Joined</span>\n          <br />\n          {profile.dateJoined ? (\n            <h5>{displayDate(profile.dateJoined)}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Not available</h5>\n          )}\n\n          <span>Date Added</span>\n          <br />\n          {profile.dateAdded ? (\n            <h5>{displayDate(profile.dateAdded)}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Not available</h5>\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUserProfile.propTypes = {\n  history: PropType.shape({\n    push: PropType.func\n  }).isRequired\n};\n\nexport default withRouter(UserProfile);\n"],"names":["ImageLoader","ACCOUNT_EDIT","displayDate","PropType","React","useSelector","withRouter","UserProfile","props","profile","state","createElement","className","alt","src","banner","avatar","onClick","history","push","type","fullname","email","address","role","mobile","value","country","countryCode","dateJoined","dateAdded","propTypes","shape","func","isRequired"],"sourceRoot":""}