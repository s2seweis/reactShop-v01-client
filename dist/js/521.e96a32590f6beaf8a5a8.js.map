{"version":3,"file":"js/521.e96a32590f6beaf8a5a8.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACgD;AACM;AACV;AACV;AACR;AACgB;AACI;AAE9C,IAAMO,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;EAChC;EACA;EACA,IAAMC,QAAQ,GAAGJ,kEAAW,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACD,QAAQ;EAAA,EAAC;EAEvD,oBACE;IAAK,SAAS,EAAC;EAAc,gBAC3B;IAAK,SAAS,EAAC;EAAoB,gBACjC;IAAK,SAAS,EAAC;EAAqB,gBAClC;IAAK,SAAS,EAAC;EAA6B,gBAC1C,iDAAC,oEAAW;IACV,GAAG,EAAC,QAAQ;IACZ,SAAS,EAAC,yBAAyB;IACnC,GAAG,EAAEA,QAAQ,CAACE;EAAO,EACrB,CACE,eACN;IAAK,SAAS,EAAC;EAA6B,gBAC1C,iDAAC,oEAAW;IACV,GAAG,EAAC,QAAQ;IACZ,SAAS,EAAC,kBAAkB;IAC5B,GAAG,EAAEF,QAAQ,CAACG;EAAO,EACrB,CACE,eACN;IACE,SAAS,EAAC,uCAAuC;IACjD,OAAO,EAAE;MAAA,OAAMJ,KAAK,CAACK,OAAO,CAACC,IAAI,CAACb,0EAAkB,CAAC;IAAA,CAAC;IACtD,IAAI,EAAC;EAAQ,GACd,eAED,CAAS,CACL,eAIN;IAAK,SAAS,EAAC;EAAsB,gBASnC,+DAAM,WAAS,CAAO,eACtB,4DAAM,eACN,6DAAKQ,QAAQ,CAACM,QAAQ,CAAM,eAI5B,+DAAM,OAAK,CAAO,eAClB,4DAAM,eACN,6DAAKN,QAAQ,CAACO,KAAK,CAAM,eAIzB,+DAAM,SAAO,CAAO,eACpB,4DAAM,EACLP,QAAQ,CAACQ,OAAO,gBACf,6DAAKR,QAAQ,CAACQ,OAAO,CAAM,gBAE3B;IAAI,SAAS,EAAC;EAAyB,GAAC,iBAAe,CACxD,eAGD,+DAAM,SAAO,CAAO,eACpB,4DAAM,EACLR,QAAQ,CAACS,IAAI,gBACZ,6DAAKT,QAAQ,CAACS,IAAI,CAAM,gBAExB;IAAI,SAAS,EAAC;EAAyB,GAAC,iBAAe,CACxD,eAID,+DAAM,QAAM,CAAO,eACnB,4DAAM,EACLT,QAAQ,CAACU,MAAM,gBACd,6DAAKV,QAAQ,CAACU,MAAM,CAACC,KAAK,CAAM,gBAEhC;IAAI,SAAS,EAAC;EAAyB,GAAC,gBAAc,CACvD,eAED,+DAAM,SAAO,CAAO,eACpB,4DAAM,EACLX,QAAQ,CAACU,MAAM,gBACd,6DAAKV,QAAQ,CAACU,MAAM,CAACE,OAAO,CAAM,gBAElC;IAAI,SAAS,EAAC;EAAyB,GAAC,gBAAc,CACvD,eAED,+DAAM,cAAY,CAAO,eACzB,4DAAM,EACLZ,QAAQ,CAACU,MAAM,gBACd,6DAAKV,QAAQ,CAACU,MAAM,CAACG,WAAW,CAAM,gBAEtC;IAAI,SAAS,EAAC;EAAyB,GAAC,gBAAc,CACvD,CAwBG,CACF,CACF;AAEV,CAAC;AAEDf,cAAc,CAACgB,SAAS,GAAG;EACzBV,OAAO,EAAEV,uDAAc,CAAC;IACtBW,IAAI,EAAEX,wDAAasB;EACrB,CAAC,CAAC,CAACC;AACL,CAAC;AAED,iEAAepB,sEAAU,CAACC,cAAc,CAAC","sources":["webpack://ecommerce-react/./src/views/admin/component_setting/SettingTab.jsx"],"sourcesContent":["/* eslint-disable indent */\nimport { ImageLoader } from 'components/common';\nimport { ADMIN_SETTING_EDIT } from 'constants/routes';\nimport { displayDate } from 'helpers/utils';\nimport PropType from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst SettingProfile = (props) => {\n  // profile = users, in firebase\n  // const profile = useSelector((state) => state.profile);\n  const settings = useSelector((state) => state.settings);\n\n  return (\n    <div className=\"user-profile\">\n      <div className=\"user-profile-block\">\n        <div className=\"user-profile-banner\">\n          <div className=\"user-profile-banner-wrapper\">\n            <ImageLoader\n              alt=\"Banner\"\n              className=\"user-profile-banner-img\"\n              src={settings.banner}\n            />\n          </div>\n          <div className=\"user-profile-avatar-wrapper\">\n            <ImageLoader\n              alt=\"Avatar\"\n              className=\"user-profile-img\"\n              src={settings.avatar}\n            />\n          </div>\n          <button\n            className=\"button button-small user-profile-edit\"\n            onClick={() => props.history.push(ADMIN_SETTING_EDIT)}\n            type=\"button\"\n          >\n            Edit Settings\n          </button>\n        </div>\n\n\n        \n        <div className=\"user-profile-details\">\n\n\n\n          {/* <h2 className=\"user-profile-name\">{settings.fullname}</h2> */}\n\n\n\n\n          <span>Full Name</span>\n          <br />\n          <h5>{settings.fullname}</h5>\n\n\n      \n          <span>Email</span>\n          <br />\n          <h5>{settings.email}</h5>\n\n\n\n          <span>Address</span>\n          <br />\n          {settings.address ? (\n            <h5>{settings.address}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Address not set</h5>\n          )}\n\n\n          <span>Address</span>\n          <br />\n          {settings.role ? (\n            <h5>{settings.role}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Address not set</h5>\n          )}\n\n          {/* map object */}\n\n          <span>Mobile</span>\n          <br />\n          {settings.mobile ? (\n            <h5>{settings.mobile.value}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n          <span>Country</span>\n          <br />\n          {settings.mobile ? (\n            <h5>{settings.mobile.country}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n          <span>Country Code</span>\n          <br />\n          {settings.mobile ? (\n            <h5>{settings.mobile.countryCode}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Mobile not set</h5>\n          )}\n\n\n\n          {/* <span>Date Joined</span>\n          <br />\n          {settings.dateJoined ? (\n            <h5>{displayDate(settings.dateJoined)}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Not available</h5>\n          )}\n\n          <span>Date Added</span>\n          <br />\n          {settings.dateAdded ? (\n            <h5>{displayDate(settings.dateAdded)}</h5>\n          ) : (\n            <h5 className=\"text-subtle text-italic\">Not available</h5>\n          )} */}\n\n\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSettingProfile.propTypes = {\n  history: PropType.shape({\n    push: PropType.func\n  }).isRequired\n};\n\nexport default withRouter(SettingProfile);\n"],"names":["ImageLoader","ADMIN_SETTING_EDIT","displayDate","PropType","React","useSelector","withRouter","SettingProfile","props","settings","state","banner","avatar","history","push","fullname","email","address","role","mobile","value","country","countryCode","propTypes","shape","func","isRequired"],"sourceRoot":""}